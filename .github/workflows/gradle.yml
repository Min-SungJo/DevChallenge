# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle # GitHub Actions 에서 보여질 이름

on: # master branch 의 push 시 실행
  push:
    branches: [ "master" ]
  workflow_dispatch: # 수동으로도 실행 가능

jobs:
  build:
    runs-on: ubuntu-latest # GitHub Actions 에 내장된 OS 사용

    steps:
    - name: Checkout # 프로젝트 코드 체크아웃
      uses: actions/checkout@v3

    - name: Set up JDK 17 # OS 에 Java 설치
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

#    - name: make application.yml
#      run: |
#        cd ./src/main/resources
#        touch ./application.yml
#        echo "${{ secrets.APPLICATION_REAL }}" > ./application.yml
#      shell: bash
#
#    - name: make application-real-db.yml
#      run: |
#        cd ./src/main/resources
#        touch ./application-real-db.yml
#        echo "${{ secrets.APPLICATION_REAL_DB }}" > ./application-real-db.yml
#      shell: bash

    - name: Grant execute permission for gradlew # gradle wrapper 실행 권한 부여
      run: chmod + ./gradlew
      
    - name: Build with Gradle # 빌드
      run: ./gradlew clean build # gradle wrapper 로 build, commit

    - name: Get current time
      uses: 1466587594/get-current-time@v2
      id: current-time
      with:
        format: YYYY-MM-DDTHH-mm-ss
        utcOffset: "+09:00"
    - name: Show Current Time
      run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
      shell: bash

#    - name: web docker build and push
#      run: |
#        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#        docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }} .
#        docker push ${{ secrets.DOCKER_REPO }}
#
#    - name: executing remote ssh commands using password
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        username: ec2-user
#        key: ${{ secrets.PEM_KEY }}
#
#        script: |
#          sudo docker rm -f $(docker ps -qa)
#          sudo docker pull ${{ secrets.DOCKER_REPO }}
#          sudo docker pull ${{ secrets.DOCKER_REPO_NGINX }}
#          sudo docker-compose -f docker-compose.yml up -d --build
#          sudo docker image prune -f
#
